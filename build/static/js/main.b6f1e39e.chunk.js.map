{"version":3,"sources":["components/Form.js","components/Person.js","components/Persons.js","components/Filter.js","components/Notification.js","services/phonebook.js","components/App.js","index.js"],"names":["Form","props","onSubmit","onFormSubmit","onChange","onNameChange","value","name","onNumberChange","number","type","Person","person","onPersonDelete","onClick","id","Persons","persons","map","key","Filter","onTermChange","term","Notification","message","className","baseUrl","newPerson","axios","post","then","response","data","get","newData","put","delete","App","useState","setPersons","newName","setNewName","newNumber","setNewNumber","newTerm","setNewTerm","setMessage","setType","useEffect","phonebook","addPerson","concat","showNotification","catch","err","console","log","updatePerson","window","confirm","find","p","updatedPerson","checkPersonExists","input","some","setTimeout","e","target","preventDefault","filter","toLowerCase","includes","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.b6f1e39e.chunk.js","sourcesContent":["import React from 'react';\n\nconst Form = props => {\n  return (\n    <form onSubmit={props.onFormSubmit}>\n      <div>\n        Name: <input onChange={props.onNameChange} value={props.name} />\n      </div>\n      <div>\n        Number: <input onChange={props.onNumberChange} value={props.number} />\n      </div>\n      <div>\n        <button type=\"submit\">Add</button>\n      </div>\n    </form>\n  );\n};\n\nexport default Form;\n","import React from 'react';\n\nconst Person = ({ person, onPersonDelete }) => {\n  return (\n    <div>\n      {person.name} {person.number}\n      <button onClick={() => onPersonDelete(person.id, person.name)}>\n        Delete\n      </button>\n    </div>\n  );\n};\n\nexport default Person;\n","import React from 'react';\nimport Person from './Person';\n\nconst Persons = ({ persons, onPersonDelete }) => {\n  return (\n    <div>\n      {persons.map(person => (\n        <Person\n          key={person.name}\n          person={person}\n          onPersonDelete={onPersonDelete}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default Persons;\n","import React from 'react';\n\nconst Filter = ({ onTermChange, term }) => {\n  return (\n    <div>\n      Filter Phonebook: <input onChange={onTermChange} value={term} />\n    </div>\n  );\n};\n\nexport default Filter;\n","import React from 'react';\n\nconst Notification = ({ message, type }) => {\n  if (message === null) {\n    return null;\n  }\n\n  return (\n    <div className={`notification ${type === 'error' ? 'error' : 'success'}`}>\n      {message}\n    </div>\n  );\n};\n\nexport default Notification;\n","import axios from 'axios';\n\nconst baseUrl = '/api/persons';\n\nconst create = newPerson => {\n  const request = axios.post(baseUrl, newPerson);\n  return request.then(response => response.data);\n};\n\nconst getAll = () => {\n  const request = axios.get(baseUrl);\n  return request.then(response => response.data);\n};\n\nconst updatePerson = (id, newData) => {\n  const request = axios.put(`${baseUrl}/${id}`, newData);\n  return request.then(response => response.data);\n};\n\nconst deletePerson = id => {\n  const request = axios.delete(`${baseUrl}/${id}`);\n  return request.then();\n};\n\nexport default { create, getAll, updatePerson, deletePerson };\n","import React, { useState, useEffect } from 'react';\nimport Form from './Form';\nimport Persons from './Persons';\nimport Filter from './Filter';\nimport Notification from './Notification';\nimport phonebook from '../services/phonebook';\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState('');\n  const [newNumber, setNewNumber] = useState('');\n  const [newTerm, setNewTerm] = useState('');\n  const [message, setMessage] = useState(null);\n  const [type, setType] = useState('');\n\n  useEffect(() => {\n    phonebook.getAll().then(data => setPersons(data));\n  }, []);\n\n  const onNameChange = e => setNewName(e.target.value);\n  const onNumberChange = e => setNewNumber(e.target.value);\n  const onTermChange = e => setNewTerm(e.target.value);\n\n  const onFormSubmit = e => {\n    e.preventDefault();\n\n    if (checkPersonExists(newName)) {\n      updatePerson();\n    } else {\n      addPerson();\n    }\n\n    setNewName('');\n    setNewNumber('');\n  };\n\n  const addPerson = () => {\n    const newPerson = { name: newName, number: newNumber };\n    phonebook\n      .create(newPerson)\n      .then(data => {\n        setPersons(persons.concat(data));\n        showNotification(`Added ${newName}`);\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  };\n\n  const updatePerson = () => {\n    if (\n      window.confirm(\n        `${newName} is already added to the phonebook. Replace the old number with a new one?`\n      )\n    ) {\n      const person = persons.find(p => p.name === newName);\n      const updatedPerson = { ...person, number: newNumber };\n\n      phonebook\n        .updatePerson(person.id, updatedPerson)\n        .then(data => {\n          setPersons(persons.map(p => (p.id !== person.id ? p : data)));\n          showNotification(`Updated number for ${newName}`);\n        })\n        .catch(() => {\n          showNotification(\n            `Information of ${newName} has already been removed from server`,\n            'error'\n          );\n        });\n    }\n  };\n\n  const deletePerson = (id, name) => {\n    if (window.confirm(`Delete ${name}?`)) {\n      phonebook.deletePerson(id).then(() => {\n        setPersons(persons.filter(p => p.id !== id));\n      });\n    }\n  };\n\n  const checkPersonExists = input => {\n    return persons.some(person => person.name === input);\n  };\n\n  const filterPhonebook = () => {\n    return persons.filter(person =>\n      person.name.toLowerCase().includes(newTerm.toLowerCase())\n    );\n  };\n\n  const showNotification = (message, type = 'success') => {\n    setMessage(message);\n    setType(type);\n    setTimeout(() => {\n      setMessage(null);\n      setType('');\n    }, 5000);\n  };\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={message} type={type} />\n      <Filter onTermChange={onTermChange} term={newTerm} />\n      <h3>Add New</h3>\n      <Form\n        onFormSubmit={onFormSubmit}\n        onNameChange={onNameChange}\n        onNumberChange={onNumberChange}\n        name={newName}\n        number={newNumber}\n      />\n      <h3>Numbers</h3>\n      <Persons persons={filterPhonebook()} onPersonDelete={deletePerson} />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport './index.css';\n\nReactDOM.render(<App />, document.querySelector('#root'));\n"],"sourceRoot":""}